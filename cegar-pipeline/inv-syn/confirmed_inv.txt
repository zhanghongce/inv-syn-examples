0 0 41
~(1'b1) || ((!((m1.reg_3_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_3_w_stage) == (2'b01))))
~(1'b1) || (((m1.reg_0_w_stage) == (m1.reg_3_w_stage)) ||(!((m1.reg_2_w_stage) == (2'b11))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (m1.id_ex_rd))) ||(!((m1.reg_3_w_stage) == (2'b10))))
~(1'b1) || ((!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) ||(!((m1.reg_2_w_stage) == (2'b01))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_3_w_stage) == (2'b01))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (m1.reg_1_w_stage))) ||((m1.reg_0_w_stage) == (2'b00)))
~(1'b1) || (((~(m1.id_ex_reg_wen)) == (~(m1.ex_wb_reg_wen))) ||(!((m1.reg_0_w_stage) == (2'b11))))
~(1'b1) || ((!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) ||(!((m1.reg_0_w_stage) == (2'b01))))
~(!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) || ((!((m1.reg_0_w_stage) == (m1.reg_3_w_stage))) ||(!((m1.ex_wb_rd) == (2'b11))))
~(1'b1) || ((!((~(m1.id_ex_reg_wen)) == (~(1'b0)))) ||(!((m1.reg_3_w_stage) == (2'b10))))
~(1'b1) || ((!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) ||(!((m1.reg_3_w_stage) == (2'b01))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_2_w_stage) == (2'b11))))
~(1'b1) || (((m1.reg_0_w_stage) == (m1.reg_2_w_stage)) ||(!((m1.reg_1_w_stage) == (2'b11))))
~(!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) || ((!((m1.reg_0_w_stage) == (m1.reg_1_w_stage))) ||(!((m1.ex_wb_rd) == (2'b01))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_1_w_stage) == (2'b01))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_0_w_stage) == (2'b01))))
~(1'b1) || (((m1.reg_0_w_stage) == (m1.reg_1_w_stage)) ||(!((m1.reg_3_w_stage) == (2'b11))))
~(1'b1) || ((!((m1.reg_1_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_3_w_stage) == (2'b01))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (2'b01))) ||((m1.ex_wb_rd) == (2'b00)))
~(1'b1) || ((!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) ||(!((m1.reg_1_w_stage) == (2'b01))))
~(1'b1) || ((!((~(m1.id_ex_reg_wen)) == (~(1'b0)))) ||(!((m1.reg_2_w_stage) == (2'b10))))
~(1'b1) || ((!((m1.reg_2_w_stage) == (m1.reg_3_w_stage))) ||((m1.reg_2_w_stage) == (2'b00)))
~(1'b1) || (((~(m1.id_ex_reg_wen)) == (~(m1.ex_wb_reg_wen))) ||(!((m1.reg_1_w_stage) == (2'b11))))
~(1'b1) || ((!((m1.reg_1_w_stage) == (m1.id_ex_rd))) ||(!((m1.reg_1_w_stage) == (2'b10))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (m1.ex_wb_rd))) ||(!((~(m1.id_ex_reg_wen)) == ((m1.id_ex_reg_wen) |(m1.ex_wb_reg_wen)))))
~(1'b1) || (((m1.reg_3_w_stage) == (m1.ex_wb_rd)) ||(!((m1.reg_3_w_stage) == (2'b11))))
~(1'b1) || ((!((m1.reg_1_w_stage) == (m1.reg_2_w_stage))) ||((m1.reg_1_w_stage) == (2'b00)))
~(1'b1) || ((!((m1.reg_0_w_stage) == (2'b11))) ||((m1.reg_1_w_stage) == (m1.reg_2_w_stage)))
~(1'b1) || ((!((m1.reg_0_w_stage) == (2'b11))) ||((m1.reg_1_w_stage) == (m1.ex_wb_rd)))
~((~(m1.id_ex_reg_wen)) == (~(m1.ex_wb_reg_wen))) || ((!((m1.reg_0_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_2_w_stage) == (2'b10))))
~(!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) || ((!((m1.reg_0_w_stage) == (m1.reg_2_w_stage))) ||(!((m1.ex_wb_rd) == (2'b10))))
~(1'b1) || ((!((m1.reg_2_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_3_w_stage) == (2'b01))))
~(1'b1) || ((!((m1.reg_0_w_stage) == (m1.reg_2_w_stage))) ||((m1.reg_0_w_stage) == (2'b00)))
~(!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) || ((!((m1.reg_1_w_stage) == (m1.reg_3_w_stage))) ||(!((m1.ex_wb_rd) == (2'b11))))
~(!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) || ((!((m1.reg_1_w_stage) == (m1.reg_2_w_stage))) ||(!((m1.ex_wb_rd) == (2'b01))))
~(1'b1) || ((!((m1.reg_2_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_2_w_stage) == (2'b01))))
~((~(m1.id_ex_reg_wen)) == (~(m1.ex_wb_reg_wen))) || ((!((m1.reg_0_w_stage) == (m1.ex_wb_rd))) ||((m1.reg_1_w_stage) == (m1.reg_3_w_stage)))
~(1'b1) || ((!((m1.reg_2_w_stage) == (2'b01))) ||((m1.ex_wb_rd) == (2'b10)))
~(1'b1) || (((m1.reg_1_w_stage) == (m1.ex_wb_rd)) ||(!((m1.reg_1_w_stage) == (2'b01))))
~(!((~(m1.ex_wb_reg_wen)) == (~(1'b0)))) || ((!((m1.reg_0_w_stage) == (m1.ex_wb_rd))) ||(!((m1.reg_1_w_stage) == (m1.reg_2_w_stage))))
~(1'b1) || (((m1.reg_0_w_stage) == (m1.reg_1_w_stage)) ||(!((m1.reg_2_w_stage) == (2'b11))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_3_w_stage m1.ex_wb_rd)) (not (= m1.reg_3_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (= m1.reg_0_w_stage m1.reg_3_w_stage) (not (= m1.reg_2_w_stage #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage m1.id_ex_rd)) (not (= m1.reg_3_w_stage #b10)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (not (= m1.reg_2_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage m1.ex_wb_rd)) (not (= m1.reg_3_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage m1.reg_1_w_stage)) (= m1.reg_0_w_stage #b00))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (= (bvnot m1.id_ex_reg_wen) (bvnot m1.ex_wb_reg_wen)) (not (= m1.reg_0_w_stage #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (not (= m1.reg_0_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (or (not (= m1.reg_0_w_stage m1.reg_3_w_stage)) (not (= m1.ex_wb_rd #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= (bvnot m1.id_ex_reg_wen) (bvnot #b0))) (not (= m1.reg_3_w_stage #b10)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (not (= m1.reg_3_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage m1.ex_wb_rd)) (not (= m1.reg_2_w_stage #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (= m1.reg_0_w_stage m1.reg_2_w_stage) (not (= m1.reg_1_w_stage #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (or (not (= m1.reg_0_w_stage m1.reg_1_w_stage)) (not (= m1.ex_wb_rd #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage m1.ex_wb_rd)) (not (= m1.reg_1_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage m1.ex_wb_rd)) (not (= m1.reg_0_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (= m1.reg_0_w_stage m1.reg_1_w_stage) (not (= m1.reg_3_w_stage #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_1_w_stage m1.ex_wb_rd)) (not (= m1.reg_3_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage #b01)) (= m1.ex_wb_rd #b00))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (not (= m1.reg_1_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= (bvnot m1.id_ex_reg_wen) (bvnot #b0))) (not (= m1.reg_2_w_stage #b10)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_2_w_stage m1.reg_3_w_stage)) (= m1.reg_2_w_stage #b00))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (= (bvnot m1.id_ex_reg_wen) (bvnot m1.ex_wb_reg_wen)) (not (= m1.reg_1_w_stage #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_1_w_stage m1.id_ex_rd)) (not (= m1.reg_1_w_stage #b10)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage m1.ex_wb_rd)) (not (= (bvnot m1.id_ex_reg_wen) (bvor m1.id_ex_reg_wen m1.ex_wb_reg_wen))))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (= m1.reg_3_w_stage m1.ex_wb_rd) (not (= m1.reg_3_w_stage #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_1_w_stage m1.reg_2_w_stage)) (= m1.reg_1_w_stage #b00))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage #b11)) (= m1.reg_1_w_stage m1.reg_2_w_stage))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage #b11)) (= m1.reg_1_w_stage m1.ex_wb_rd))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> (= (bvnot m1.id_ex_reg_wen) (bvnot m1.ex_wb_reg_wen)) (or (not (= m1.reg_0_w_stage m1.ex_wb_rd)) (not (= m1.reg_2_w_stage #b10)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (or (not (= m1.reg_0_w_stage m1.reg_2_w_stage)) (not (= m1.ex_wb_rd #b10)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_2_w_stage m1.ex_wb_rd)) (not (= m1.reg_3_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_0_w_stage m1.reg_2_w_stage)) (= m1.reg_0_w_stage #b00))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (or (not (= m1.reg_1_w_stage m1.reg_3_w_stage)) (not (= m1.ex_wb_rd #b11)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (or (not (= m1.reg_1_w_stage m1.reg_2_w_stage)) (not (= m1.ex_wb_rd #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_2_w_stage m1.ex_wb_rd)) (not (= m1.reg_2_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> (= (bvnot m1.id_ex_reg_wen) (bvnot m1.ex_wb_reg_wen)) (or (not (= m1.reg_0_w_stage m1.ex_wb_rd)) (= m1.reg_1_w_stage m1.reg_3_w_stage))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (not (= m1.reg_2_w_stage #b01)) (= m1.ex_wb_rd #b10))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (= m1.reg_1_w_stage m1.ex_wb_rd) (not (= m1.reg_1_w_stage #b01)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> (not (= (bvnot m1.ex_wb_reg_wen) (bvnot #b0))) (or (not (= m1.reg_0_w_stage m1.ex_wb_rd)) (not (= m1.reg_1_w_stage m1.reg_2_w_stage)))))
(define-fun INV ((m1.reg_0_w_stage (_ BitVec 2)) (m1.reg_1_w_stage (_ BitVec 2)) (m1.reg_2_w_stage (_ BitVec 2)) (m1.reg_3_w_stage (_ BitVec 2)) (m1.id_ex_reg_wen (_ BitVec 1)) (m1.id_ex_rd (_ BitVec 2)) (m1.ex_wb_reg_wen (_ BitVec 1)) (m1.ex_wb_rd (_ BitVec 2))) Bool (=> true (or (= m1.reg_0_w_stage m1.reg_1_w_stage) (not (= m1.reg_2_w_stage #b11)))))
